# Generated by Django 4.2.23 on 2025-10-02 04:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('display_name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('detection_config', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessingProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('detector_class', models.CharField(default='RTXVehicleDetector', help_text='Python class name of the detector to use', max_length=100)),
                ('detector_module', models.CharField(default='ml.vehicle_detector', help_text='Python module path where detector class is located', max_length=200)),
                ('config_parameters', models.JSONField(blank=True, default=dict, help_text='JSON configuration for this processing profile')),
                ('road_type', models.CharField(choices=[('highway', 'Highway'), ('intersection', 'Intersection'), ('y_junction', 'Y-Junction'), ('t_intersection', 'T-Intersection'), ('roundabout', 'Roundabout'), ('urban', 'Urban Street'), ('generic', 'Generic'), ('custom', 'Custom')], default='generic', max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['road_type', 'display_name'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.JSONField(default=dict)),
                ('description', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='VideoFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('file_path', models.FileField(upload_to='videos/')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('video_date', models.DateField(blank=True, help_text='Date when video was recorded', null=True)),
                ('video_start_time', models.TimeField(blank=True, help_text='Start time of video recording', null=True)),
                ('video_end_time', models.TimeField(blank=True, help_text='End time of video recording', null=True)),
                ('original_duration', models.FloatField(blank=True, help_text='Original video duration in seconds', null=True)),
                ('processed', models.BooleanField(default=False)),
                ('processed_video_path', models.FileField(blank=True, null=True, upload_to='processed_videos/')),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=50)),
                ('duration_seconds', models.FloatField(blank=True, null=True)),
                ('fps', models.FloatField(blank=True, null=True)),
                ('total_frames', models.IntegerField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('resolution', models.CharField(blank=True, max_length=20, null=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrafficAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_vehicles', models.IntegerField(default=0)),
                ('processing_time_seconds', models.FloatField(default=0)),
                ('analyzed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('car_count', models.IntegerField(default=0)),
                ('truck_count', models.IntegerField(default=0)),
                ('motorcycle_count', models.IntegerField(default=0)),
                ('bus_count', models.IntegerField(default=0)),
                ('bicycle_count', models.IntegerField(default=0)),
                ('other_count', models.IntegerField(default=0)),
                ('peak_traffic', models.IntegerField(default=0)),
                ('average_traffic', models.FloatField(default=0)),
                ('congestion_level', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('severe', 'Severe')], default='low', max_length=20)),
                ('traffic_pattern', models.CharField(choices=[('increasing', 'Increasing'), ('decreasing', 'Decreasing'), ('stable', 'Stable'), ('fluctuating', 'Fluctuating')], default='stable', max_length=20)),
                ('analysis_data', models.JSONField(default=dict)),
                ('metrics_summary', models.JSONField(default=dict)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trapickapp.location')),
                ('video_file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='traffic_analysis', to='trapickapp.videofile')),
            ],
            options={
                'verbose_name_plural': 'Traffic Analyses',
            },
        ),
        migrations.AddField(
            model_name='location',
            name='processing_profile',
            field=models.ForeignKey(help_text='Select or create a processing profile for this location', on_delete=django.db.models.deletion.PROTECT, related_name='locations', to='trapickapp.processingprofile'),
        ),
        migrations.CreateModel(
            name='HourlyTrafficSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('hour', models.IntegerField()),
                ('count', models.IntegerField()),
                ('average_confidence', models.FloatField(default=0)),
                ('peak_5min_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trapickapp.location')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trapickapp.vehicletype')),
            ],
        ),
        migrations.CreateModel(
            name='FrameAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('frame_number', models.IntegerField()),
                ('timestamp_seconds', models.FloatField()),
                ('car_count', models.IntegerField(default=0)),
                ('truck_count', models.IntegerField(default=0)),
                ('motorcycle_count', models.IntegerField(default=0)),
                ('bus_count', models.IntegerField(default=0)),
                ('bicycle_count', models.IntegerField(default=0)),
                ('total_vehicles', models.IntegerField(default=0)),
                ('congestion_level', models.CharField(default='low', max_length=20)),
                ('detection_data', models.JSONField(default=dict)),
                ('traffic_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frame_analyses', to='trapickapp.trafficanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='Detection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('frame_number', models.IntegerField()),
                ('confidence', models.FloatField()),
                ('bbox_x', models.FloatField()),
                ('bbox_y', models.FloatField()),
                ('bbox_width', models.FloatField()),
                ('bbox_height', models.FloatField()),
                ('track_id', models.IntegerField(blank=True, null=True)),
                ('in_counting_zone', models.BooleanField(default=True)),
                ('speed_estimate', models.FloatField(blank=True, null=True)),
                ('direction', models.CharField(blank=True, choices=[('incoming', 'Incoming'), ('outgoing', 'Outgoing'), ('stationary', 'Stationary')], max_length=10, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trapickapp.location')),
                ('traffic_analysis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detections', to='trapickapp.trafficanalysis')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trapickapp.vehicletype')),
                ('video_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detections', to='trapickapp.videofile')),
            ],
        ),
        migrations.CreateModel(
            name='DailyTrafficSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_count', models.IntegerField()),
                ('peak_hour', models.IntegerField()),
                ('peak_hour_count', models.IntegerField()),
                ('average_daily_congestion', models.CharField(default='low', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trapickapp.location')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trapickapp.vehicletype')),
            ],
        ),
        migrations.CreateModel(
            name='TrafficReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('generated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('report_type', models.CharField(choices=[('quick', 'Quick Summary'), ('detailed', 'Detailed Analysis'), ('predictive', 'Predictive Report'), ('comparative', 'Comparative Report')], default='detailed', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('executive_summary', models.TextField(blank=True)),
                ('key_findings', models.JSONField(default=dict)),
                ('insights', models.TextField(blank=True)),
                ('predictions', models.JSONField(default=dict)),
                ('recommendations', models.TextField(blank=True)),
                ('total_vehicles_period', models.IntegerField(default=0)),
                ('average_daily_traffic', models.FloatField(default=0)),
                ('peak_hours', models.JSONField(default=list)),
                ('congestion_trends', models.JSONField(default=dict)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trapickapp.location')),
                ('traffic_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='trapickapp.trafficanalysis')),
            ],
            options={
                'indexes': [models.Index(fields=['generated_at'], name='trapickapp__generat_057391_idx'), models.Index(fields=['location', 'generated_at'], name='trapickapp__locatio_8b9cba_idx')],
            },
        ),
        migrations.CreateModel(
            name='TrafficPrediction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prediction_date', models.DateField()),
                ('day_of_week', models.IntegerField()),
                ('hour_of_day', models.IntegerField()),
                ('predicted_vehicle_count', models.FloatField(default=0.0)),
                ('predicted_congestion', models.CharField(default='low', max_length=20)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('confidence_interval_lower', models.FloatField(default=0.0)),
                ('confidence_interval_upper', models.FloatField(default=0.0)),
                ('model_version', models.CharField(default='v1.0', max_length=50)),
                ('prediction_generated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trapickapp.location')),
            ],
            options={
                'indexes': [models.Index(fields=['prediction_date', 'hour_of_day'], name='trapickapp__predict_2e36ae_idx'), models.Index(fields=['location', 'prediction_date'], name='trapickapp__locatio_e93f4a_idx')],
                'unique_together': {('location', 'prediction_date', 'hour_of_day')},
            },
        ),
        migrations.AddIndex(
            model_name='trafficanalysis',
            index=models.Index(fields=['analyzed_at'], name='trapickapp__analyze_a3a3df_idx'),
        ),
        migrations.AddIndex(
            model_name='trafficanalysis',
            index=models.Index(fields=['location', 'analyzed_at'], name='trapickapp__locatio_10e0c2_idx'),
        ),
        migrations.AddIndex(
            model_name='hourlytrafficsummary',
            index=models.Index(fields=['date', 'hour'], name='trapickapp__date_ee26b5_idx'),
        ),
        migrations.AddIndex(
            model_name='hourlytrafficsummary',
            index=models.Index(fields=['location', 'date', 'hour'], name='trapickapp__locatio_dc17b0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='hourlytrafficsummary',
            unique_together={('date', 'hour', 'vehicle_type', 'location')},
        ),
        migrations.AddIndex(
            model_name='frameanalysis',
            index=models.Index(fields=['traffic_analysis', 'timestamp_seconds'], name='trapickapp__traffic_4e3a27_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='frameanalysis',
            unique_together={('traffic_analysis', 'frame_number')},
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['timestamp'], name='trapickapp__timesta_20fc2c_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['vehicle_type', 'timestamp'], name='trapickapp__vehicle_80168d_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['location', 'timestamp'], name='trapickapp__locatio_411009_idx'),
        ),
        migrations.AddIndex(
            model_name='detection',
            index=models.Index(fields=['traffic_analysis', 'frame_number'], name='trapickapp__traffic_b382b3_idx'),
        ),
        migrations.AddIndex(
            model_name='dailytrafficsummary',
            index=models.Index(fields=['date'], name='trapickapp__date_8fd280_idx'),
        ),
        migrations.AddIndex(
            model_name='dailytrafficsummary',
            index=models.Index(fields=['location', 'date'], name='trapickapp__locatio_5a495d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dailytrafficsummary',
            unique_together={('date', 'vehicle_type', 'location')},
        ),
    ]
